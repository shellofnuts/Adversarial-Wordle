<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="959px" preserveAspectRatio="none" style="width:984px;height:959px;background:#FFFFFF;" version="1.1" viewBox="0 0 984 959" width="984px" zoomAndPan="magnify"><defs><filter height="300%" id="f15gw8me0rjta8" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[b6dcce5e5ef3c84b0b048d11301373dd]
class Game--><rect codeLine="2" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="200.1953" id="Game" style="stroke:#A80036;stroke-width:1.5;" width="231" x="415" y="7"/><ellipse cx="509.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M512.0156,18.875 Q512.1719,18.6563 512.3594,18.5469 Q512.5469,18.4375 512.7656,18.4375 Q513.1406,18.4375 513.375,18.6953 Q513.6094,18.9531 513.6094,19.5625 L513.6094,21.0156 Q513.6094,21.625 513.375,21.8906 Q513.1406,22.1563 512.7656,22.1563 Q512.4219,22.1563 512.2188,21.9531 Q512.0156,21.7656 511.9063,21.25 Q511.8594,20.8906 511.6719,20.7031 Q511.3438,20.3281 510.7344,20.1094 Q510.125,19.8906 509.5,19.8906 Q508.7344,19.8906 508.1016,20.2188 Q507.4688,20.5469 506.9766,21.2969 Q506.4844,22.0469 506.4844,23.0781 L506.4844,24.1719 Q506.4844,25.4063 507.375,26.2266 Q508.2656,27.0469 509.8594,27.0469 Q510.7969,27.0469 511.4531,26.7969 Q511.8438,26.6406 512.2656,26.2031 Q512.5313,25.9375 512.6797,25.8594 Q512.8281,25.7813 513.0313,25.7813 Q513.3594,25.7813 513.6172,26.0391 Q513.875,26.2969 513.875,26.6406 Q513.875,26.9844 513.5313,27.3906 Q513.0313,27.9688 512.2344,28.2969 Q511.1563,28.75 509.8594,28.75 Q508.3438,28.75 507.1406,28.125 Q506.1563,27.625 505.4688,26.5547 Q504.7813,25.4844 504.7813,24.2031 L504.7813,23.0469 Q504.7813,21.7188 505.3984,20.5703 Q506.0156,19.4219 507.1094,18.8047 Q508.2031,18.1875 509.4375,18.1875 Q510.1719,18.1875 510.8203,18.3516 Q511.4688,18.5156 512.0156,18.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="34" x="529.75" y="27.9102">Game</text><line style="stroke:#A80036;stroke-width:1.5;" x1="416" x2="645" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="47"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="435" y="54.4189">unique_ptr&lt;Display&gt; _internal_display</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="60.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="435" y="68.2549">unique_ptr&lt;WordList&gt; _internal_word_list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="74.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="435" y="82.0908">unique_ptr&lt;WordList&gt; _internal_answers</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="88.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="435" y="95.9268">unique_ptr&lt;Opponent&gt; _internal_opponent</text><line style="stroke:#A80036;stroke-width:1.5;" x1="416" x2="645" y1="102.3438" y2="102.3438"/><ellipse cx="426" cy="113.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="435" y="117.7627">Game(allowed_file, answers_file)</text><ellipse cx="426" cy="127.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="28" x="435" y="131.5986">play()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="0" x="438" y="145.4346"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="151.8516"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="435" y="159.2705">string get_input()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="165.6875"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="435" y="173.1064">update_opponent(string guess)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="179.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="435" y="186.9424">update_board(string guess)</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="423" y="193.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="435" y="200.7783">bool end_condition()</text><!--MD5=[292033ffe4750640675b59034298e578]
class Display--><rect codeLine="18" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="227.8672" id="Display" style="stroke:#A80036;stroke-width:1.5;" width="349" x="7" y="285"/><ellipse cx="156.75" cy="301" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M159.5156,296.875 Q159.6719,296.6563 159.8594,296.5469 Q160.0469,296.4375 160.2656,296.4375 Q160.6406,296.4375 160.875,296.6953 Q161.1094,296.9531 161.1094,297.5625 L161.1094,299.0156 Q161.1094,299.625 160.875,299.8906 Q160.6406,300.1563 160.2656,300.1563 Q159.9219,300.1563 159.7188,299.9531 Q159.5156,299.7656 159.4063,299.25 Q159.3594,298.8906 159.1719,298.7031 Q158.8438,298.3281 158.2344,298.1094 Q157.625,297.8906 157,297.8906 Q156.2344,297.8906 155.6016,298.2188 Q154.9688,298.5469 154.4766,299.2969 Q153.9844,300.0469 153.9844,301.0781 L153.9844,302.1719 Q153.9844,303.4063 154.875,304.2266 Q155.7656,305.0469 157.3594,305.0469 Q158.2969,305.0469 158.9531,304.7969 Q159.3438,304.6406 159.7656,304.2031 Q160.0313,303.9375 160.1797,303.8594 Q160.3281,303.7813 160.5313,303.7813 Q160.8594,303.7813 161.1172,304.0391 Q161.375,304.2969 161.375,304.6406 Q161.375,304.9844 161.0313,305.3906 Q160.5313,305.9688 159.7344,306.2969 Q158.6563,306.75 157.3594,306.75 Q155.8438,306.75 154.6406,306.125 Q153.6563,305.625 152.9688,304.5547 Q152.2813,303.4844 152.2813,302.2031 L152.2813,301.0469 Q152.2813,299.7188 152.8984,298.5703 Q153.5156,297.4219 154.6094,296.8047 Q155.7031,296.1875 156.9375,296.1875 Q157.6719,296.1875 158.3203,296.3516 Q158.9688,296.5156 159.5156,296.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="41" x="177.25" y="305.9102">Display</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="355" y1="317" y2="317"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="325"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="27" y="332.4189">vector&lt;string&gt; _guesses</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="338.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="346.2549">vector&lt;WordScore&gt; _guesses_score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="352.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="360.0908">map&lt;char, WordScore::Score&gt; _game_state</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="366.5078"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="27" y="373.9268">array&lt;char, 26&gt; _keyboard</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="355" y1="380.3438" y2="380.3438"/><ellipse cx="18" cy="391.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="27" y="395.7627">Display()</text><ellipse cx="18" cy="405.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="27" y="409.5986">add_guess(string guess, WordScore score)</text><ellipse cx="18" cy="419.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="27" y="423.4346">update_display() const</text><ellipse cx="18" cy="432.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="27" y="437.2705">update_display(string err_msg) const</text><ellipse cx="18" cy="446.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="27" y="451.1064">string get_user_input()</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="457.5234"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="464.9424">refresh_display() const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="471.3594"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="478.7783">format_word(const string &amp;word, const WordScore &amp;score) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="485.1953"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="27" y="492.6143">format_word(const char &amp;letter) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="499.0313"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="110" x="27" y="506.4502">print_keyboard() const</text><!--MD5=[5072a3b81fb5c9a53c4c90a9c0513364]
class WordList--><rect codeLine="35" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="144.8516" id="WordList" style="stroke:#A80036;stroke-width:1.5;" width="245" x="705" y="326.5"/><ellipse cx="798.75" cy="342.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M801.5156,338.375 Q801.6719,338.1563 801.8594,338.0469 Q802.0469,337.9375 802.2656,337.9375 Q802.6406,337.9375 802.875,338.1953 Q803.1094,338.4531 803.1094,339.0625 L803.1094,340.5156 Q803.1094,341.125 802.875,341.3906 Q802.6406,341.6563 802.2656,341.6563 Q801.9219,341.6563 801.7188,341.4531 Q801.5156,341.2656 801.4063,340.75 Q801.3594,340.3906 801.1719,340.2031 Q800.8438,339.8281 800.2344,339.6094 Q799.625,339.3906 799,339.3906 Q798.2344,339.3906 797.6016,339.7188 Q796.9688,340.0469 796.4766,340.7969 Q795.9844,341.5469 795.9844,342.5781 L795.9844,343.6719 Q795.9844,344.9063 796.875,345.7266 Q797.7656,346.5469 799.3594,346.5469 Q800.2969,346.5469 800.9531,346.2969 Q801.3438,346.1406 801.7656,345.7031 Q802.0313,345.4375 802.1797,345.3594 Q802.3281,345.2813 802.5313,345.2813 Q802.8594,345.2813 803.1172,345.5391 Q803.375,345.7969 803.375,346.1406 Q803.375,346.4844 803.0313,346.8906 Q802.5313,347.4688 801.7344,347.7969 Q800.6563,348.25 799.3594,348.25 Q797.8438,348.25 796.6406,347.625 Q795.6563,347.125 794.9688,346.0547 Q794.2813,344.9844 794.2813,343.7031 L794.2813,342.5469 Q794.2813,341.2188 794.8984,340.0703 Q795.5156,338.9219 796.6094,338.3047 Q797.7031,337.6875 798.9375,337.6875 Q799.6719,337.6875 800.3203,337.8516 Q800.9688,338.0156 801.5156,338.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="819.25" y="347.4102">WordList</text><line style="stroke:#A80036;stroke-width:1.5;" x1="706" x2="949" y1="358.5" y2="358.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="713" y="366.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="725" y="373.9189">set&lt;string&gt; _available_word_list</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="713" y="380.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="725" y="387.7549">Trie _word_checker</text><line style="stroke:#A80036;stroke-width:1.5;" x1="706" x2="949" y1="394.1719" y2="394.1719"/><ellipse cx="716" cy="405.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="725" y="409.5908">WordList(string filename)</text><ellipse cx="716" cy="419.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="725" y="423.4268">bool check_word(string word) const</text><ellipse cx="716" cy="432.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="725" y="437.2627">const set&lt;std::string&gt; &amp;get_word_list() const</text><ellipse cx="716" cy="446.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="80" x="725" y="451.0986">print_set() const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="713" y="457.5156"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="725" y="464.9346">bool add_word(const string &amp;word)</text><!--MD5=[d70edc47cf428b1ea0b45e83bb17deed]
class Opponent--><rect codeLine="46" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="158.6875" id="Opponent" style="stroke:#A80036;stroke-width:1.5;" width="278" x="391.5" y="319.5"/><ellipse cx="499.25" cy="335.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M502.0156,331.375 Q502.1719,331.1563 502.3594,331.0469 Q502.5469,330.9375 502.7656,330.9375 Q503.1406,330.9375 503.375,331.1953 Q503.6094,331.4531 503.6094,332.0625 L503.6094,333.5156 Q503.6094,334.125 503.375,334.3906 Q503.1406,334.6563 502.7656,334.6563 Q502.4219,334.6563 502.2188,334.4531 Q502.0156,334.2656 501.9063,333.75 Q501.8594,333.3906 501.6719,333.2031 Q501.3438,332.8281 500.7344,332.6094 Q500.125,332.3906 499.5,332.3906 Q498.7344,332.3906 498.1016,332.7188 Q497.4688,333.0469 496.9766,333.7969 Q496.4844,334.5469 496.4844,335.5781 L496.4844,336.6719 Q496.4844,337.9063 497.375,338.7266 Q498.2656,339.5469 499.8594,339.5469 Q500.7969,339.5469 501.4531,339.2969 Q501.8438,339.1406 502.2656,338.7031 Q502.5313,338.4375 502.6797,338.3594 Q502.8281,338.2813 503.0313,338.2813 Q503.3594,338.2813 503.6172,338.5391 Q503.875,338.7969 503.875,339.1406 Q503.875,339.4844 503.5313,339.8906 Q503.0313,340.4688 502.2344,340.7969 Q501.1563,341.25 499.8594,341.25 Q498.3438,341.25 497.1406,340.625 Q496.1563,340.125 495.4688,339.0547 Q494.7813,337.9844 494.7813,336.7031 L494.7813,335.5469 Q494.7813,334.2188 495.3984,333.0703 Q496.0156,331.9219 497.1094,331.3047 Q498.2031,330.6875 499.4375,330.6875 Q500.1719,330.6875 500.8203,330.8516 Q501.4688,331.0156 502.0156,331.375 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="54" x="519.75" y="340.4102">Opponent</text><line style="stroke:#A80036;stroke-width:1.5;" x1="392.5" x2="668.5" y1="351.5" y2="351.5"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="399.5" y="359.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="411.5" y="366.9189">vector&lt;const string*&gt; _word_set</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="399.5" y="373.3359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="411.5" y="380.7549">WordScore _previous_score</text><line style="stroke:#A80036;stroke-width:1.5;" x1="392.5" x2="668.5" y1="387.1719" y2="387.1719"/><ellipse cx="402.5" cy="398.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="411.5" y="402.5908">Opponent(const WordList &amp;master_record)</text><ellipse cx="402.5" cy="412.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="411.5" y="416.4268">const WordScore prune_words(const string guess)</text><ellipse cx="402.5" cy="425.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="411.5" y="430.2627">WordScore get_previous_score() const</text><ellipse cx="402.5" cy="439.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="411.5" y="444.0986">int get_previous_num_score() const</text><ellipse cx="402.5" cy="453.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="411.5" y="457.9346">string get_random_word() const</text><ellipse cx="402.5" cy="467.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="411.5" y="471.7705">void print_word_set() const</text><!--MD5=[546fb56c0be9f87e8d73979cbab93d0a]
class Trie--><rect codeLine="58" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="117.1797" id="Trie" style="stroke:#A80036;stroke-width:1.5;" width="214" x="720.5" y="619"/><ellipse cx="812.75" cy="635" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M815.5156,630.875 Q815.6719,630.6563 815.8594,630.5469 Q816.0469,630.4375 816.2656,630.4375 Q816.6406,630.4375 816.875,630.6953 Q817.1094,630.9531 817.1094,631.5625 L817.1094,633.0156 Q817.1094,633.625 816.875,633.8906 Q816.6406,634.1563 816.2656,634.1563 Q815.9219,634.1563 815.7188,633.9531 Q815.5156,633.7656 815.4063,633.25 Q815.3594,632.8906 815.1719,632.7031 Q814.8438,632.3281 814.2344,632.1094 Q813.625,631.8906 813,631.8906 Q812.2344,631.8906 811.6016,632.2188 Q810.9688,632.5469 810.4766,633.2969 Q809.9844,634.0469 809.9844,635.0781 L809.9844,636.1719 Q809.9844,637.4063 810.875,638.2266 Q811.7656,639.0469 813.3594,639.0469 Q814.2969,639.0469 814.9531,638.7969 Q815.3438,638.6406 815.7656,638.2031 Q816.0313,637.9375 816.1797,637.8594 Q816.3281,637.7813 816.5313,637.7813 Q816.8594,637.7813 817.1172,638.0391 Q817.375,638.2969 817.375,638.6406 Q817.375,638.9844 817.0313,639.3906 Q816.5313,639.9688 815.7344,640.2969 Q814.6563,640.75 813.3594,640.75 Q811.8438,640.75 810.6406,640.125 Q809.6563,639.625 808.9688,638.5547 Q808.2813,637.4844 808.2813,636.2031 L808.2813,635.0469 Q808.2813,633.7188 808.8984,632.5703 Q809.5156,631.4219 810.6094,630.8047 Q811.7031,630.1875 812.9375,630.1875 Q813.6719,630.1875 814.3203,630.3516 Q814.9688,630.5156 815.5156,630.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="21" x="833.25" y="639.9102">Trie</text><line style="stroke:#A80036;stroke-width:1.5;" x1="721.5" x2="933.5" y1="651" y2="651"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="728.5" y="659"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="76" x="740.5" y="666.4189">TrieNode _head</text><line style="stroke:#A80036;stroke-width:1.5;" x1="721.5" x2="933.5" y1="672.8359" y2="672.8359"/><ellipse cx="731.5" cy="683.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="26" x="740.5" y="688.2549">Trie()</text><ellipse cx="731.5" cy="697.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="740.5" y="702.0908">bool insert(const string word)</text><ellipse cx="731.5" cy="711.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="740.5" y="715.9268">bool search(const string &amp;word) const</text><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="728.5" y="722.3438"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="178" x="740.5" y="729.7627">unique_ptr&lt;TrieNode&gt; create_node()</text><!--MD5=[6274e17003689406b79ae2074c020b0b]
class TrieNode--><rect codeLine="67" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="75.6719" id="TrieNode" style="stroke:#A80036;stroke-width:1.5;" width="285" x="685" y="855.5"/><ellipse cx="797.75" cy="871.5" fill="#ADD8E6" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M795.8594,876.0625 Q795.6406,876.3281 795.5,876.4063 Q795.3594,876.4844 795.1719,876.4844 Q794.7813,876.4844 794.5391,876.2188 Q794.2969,875.9531 794.2969,875.3594 L794.2969,874.2031 Q794.2969,873.5938 794.5391,873.3359 Q794.7813,873.0781 795.1719,873.0781 Q795.4688,873.0781 795.6719,873.2344 Q795.875,873.3906 795.9844,873.7578 Q796.0938,874.125 796.2031,874.2656 Q796.4531,874.5156 797.0625,874.7813 Q797.6719,875.0469 798.4063,875.0469 Q799.5469,875.0469 800.2656,874.5156 Q800.7344,874.1875 800.7344,873.7188 Q800.7344,873.4063 800.5156,873.125 Q800.2969,872.8438 799.7813,872.6719 Q799.4531,872.5469 798.2969,872.3281 Q796.9063,872.0625 796.1875,871.7031 Q795.4688,871.3438 795.0547,870.6797 Q794.6406,870.0156 794.6406,869.2344 Q794.6406,868.0156 795.6641,867.1016 Q796.6875,866.1875 798.3281,866.1875 Q798.9844,866.1875 799.5391,866.3281 Q800.0938,866.4688 800.5625,866.7656 Q800.8906,866.4531 801.2188,866.4531 Q801.5938,866.4531 801.8281,866.7109 Q802.0625,866.9688 802.0625,867.5781 L802.0625,868.8594 Q802.0625,869.4688 801.8281,869.7266 Q801.5938,869.9844 801.2188,869.9844 Q800.9063,869.9844 800.6719,869.7969 Q800.4844,869.6563 800.3984,869.2344 Q800.3125,868.8125 800.1719,868.625 Q799.9219,868.3125 799.4453,868.1016 Q798.9688,867.8906 798.3281,867.8906 Q797.4063,867.8906 796.875,868.3125 Q796.3438,868.7344 796.3438,869.2031 Q796.3438,869.5156 796.5625,869.8125 Q796.7813,870.1094 797.2031,870.2813 Q797.4844,870.3906 798.7891,870.6484 Q800.0938,870.9063 800.7969,871.2109 Q801.5,871.5156 801.9688,872.1719 Q802.4375,872.8281 802.4375,873.7344 Q802.4375,875 801.5469,875.75 Q800.3594,876.75 798.5313,876.75 Q797.8281,876.75 797.1641,876.5781 Q796.5,876.4063 795.8594,876.0625 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="51" x="818.25" y="876.4102">TrieNode</text><line style="stroke:#A80036;stroke-width:1.5;" x1="686" x2="969" y1="887.5" y2="887.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="691" y="902.9189">array&lt;unique_ptr&lt;TrieNode&gt;, ALPHABET_SIZE&gt; children</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="63" x="691" y="916.7549">bool is_word</text><line style="stroke:#A80036;stroke-width:1.5;" x1="686" x2="969" y1="923.1719" y2="923.1719"/><!--MD5=[664102954d6d0c427e237762a7be4aa9]
class WordScore--><rect codeLine="73" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="172.5234" id="WordScore" style="stroke:#A80036;stroke-width:1.5;" width="293" x="180" y="591"/><ellipse cx="291.75" cy="607" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M294.5156,602.875 Q294.6719,602.6563 294.8594,602.5469 Q295.0469,602.4375 295.2656,602.4375 Q295.6406,602.4375 295.875,602.6953 Q296.1094,602.9531 296.1094,603.5625 L296.1094,605.0156 Q296.1094,605.625 295.875,605.8906 Q295.6406,606.1563 295.2656,606.1563 Q294.9219,606.1563 294.7188,605.9531 Q294.5156,605.7656 294.4063,605.25 Q294.3594,604.8906 294.1719,604.7031 Q293.8438,604.3281 293.2344,604.1094 Q292.625,603.8906 292,603.8906 Q291.2344,603.8906 290.6016,604.2188 Q289.9688,604.5469 289.4766,605.2969 Q288.9844,606.0469 288.9844,607.0781 L288.9844,608.1719 Q288.9844,609.4063 289.875,610.2266 Q290.7656,611.0469 292.3594,611.0469 Q293.2969,611.0469 293.9531,610.7969 Q294.3438,610.6406 294.7656,610.2031 Q295.0313,609.9375 295.1797,609.8594 Q295.3281,609.7813 295.5313,609.7813 Q295.8594,609.7813 296.1172,610.0391 Q296.375,610.2969 296.375,610.6406 Q296.375,610.9844 296.0313,611.3906 Q295.5313,611.9688 294.7344,612.2969 Q293.6563,612.75 292.3594,612.75 Q290.8438,612.75 289.6406,612.125 Q288.6563,611.625 287.9688,610.5547 Q287.2813,609.4844 287.2813,608.2031 L287.2813,607.0469 Q287.2813,605.7188 287.8984,604.5703 Q288.5156,603.4219 289.6094,602.8047 Q290.7031,602.1875 291.9375,602.1875 Q292.6719,602.1875 293.3203,602.3516 Q293.9688,602.5156 294.5156,602.875 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="61" x="312.25" y="611.9102">WordScore</text><line style="stroke:#A80036;stroke-width:1.5;" x1="181" x2="472" y1="623" y2="623"/><ellipse cx="191" cy="634" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="58" x="200" y="638.4189">enum Score</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="188" y="644.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="200" y="652.2549">array&lt;Score, 5&gt; _word_score;</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="188" y="658.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="37" x="200" y="666.0908">int size;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="181" x2="472" y1="672.5078" y2="672.5078"/><ellipse cx="191" cy="683.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="66" x="200" y="687.9268">WordScore();</text><ellipse cx="191" cy="697.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="200" y="701.7627">set_score(const int position, const Score letter_score);</text><ellipse cx="191" cy="711.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="200" y="715.5986">Score get_score(const int position) const;</text><ellipse cx="191" cy="725.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="130" x="200" y="729.4346">int get_num_score() const;</text><ellipse cx="191" cy="738.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="200" y="743.2705">bool operator==(const WordScore &amp;other) const;</text><ellipse cx="191" cy="752.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="200" y="757.1064">bool operator&lt;(const WordScore &amp;other) const;</text><!--MD5=[107af66394bf1ebaa045812c9c475148]
class Score--><rect codeLine="86" fill="#FEFECE" filter="url(#f15gw8me0rjta8)" height="103.3438" id="Score" style="stroke:#A80036;stroke-width:1.5;" width="64" x="294.5" y="842"/><ellipse cx="309.5" cy="858" fill="#EB937F" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M308.3594,858.7969 L308.3594,861.2969 L312.6875,861.2969 L312.6875,860.375 Q312.6875,859.7656 312.9297,859.5 Q313.1719,859.2344 313.5469,859.2344 Q313.9219,859.2344 314.1563,859.5 Q314.3906,859.7656 314.3906,860.375 L314.3906,863 L306.3906,863 Q305.7656,863 305.5078,862.7656 Q305.25,862.5313 305.25,862.1406 Q305.25,861.7656 305.5156,861.5313 Q305.7813,861.2969 306.3906,861.2969 L306.6563,861.2969 L306.6563,854.6406 L306.3906,854.6406 Q305.7656,854.6406 305.5078,854.4063 Q305.25,854.1719 305.25,853.7813 Q305.25,853.4063 305.5078,853.1719 Q305.7656,852.9375 306.3906,852.9375 L314.0156,852.9375 L314.0156,855.5313 Q314.0156,856.1406 313.7891,856.3984 Q313.5625,856.6563 313.1719,856.6563 Q312.7969,856.6563 312.5625,856.3984 Q312.3281,856.1406 312.3281,855.5313 L312.3281,854.6406 L308.3594,854.6406 L308.3594,857.0938 L309.8438,857.0938 Q309.8438,856.4375 309.9688,856.25 Q310.2344,855.8438 310.7031,855.8438 Q311.0781,855.8438 311.3125,856.1016 Q311.5469,856.3594 311.5469,856.9688 L311.5469,858.9375 Q311.5469,859.4844 311.4219,859.6719 Q311.1563,860.0625 310.7031,860.0625 Q310.2344,860.0625 309.9688,859.6563 Q309.8438,859.4688 309.8438,858.7969 L308.3594,858.7969 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="32" x="323.5" y="862.9102">Score</text><line style="stroke:#A80036;stroke-width:1.5;" x1="295.5" x2="357.5" y1="874" y2="874"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="29" x="300.5" y="889.4189">Empty</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="43" x="300.5" y="903.2549">Incorrect</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="34" x="300.5" y="917.0908">Yellow</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="30" x="300.5" y="930.9268">Green</text><line style="stroke:#A80036;stroke-width:1.5;" x1="295.5" x2="357.5" y1="937.3438" y2="937.3438"/><!--MD5=[0e7affa0b3b522380654119f78c7e47a]
reverse link Game to WordList--><path codeLine="94" d="M641.75,216.63 C679.24,253.23 720.12,293.15 753.96,326.19 " fill="none" id="Game-backto-WordList" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="632.3,207.4,633.7965,214.4541,640.8836,215.7858,639.3871,208.7317,632.3,207.4" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="688.0775,249.6688,683.6589,241.247,679.5526,245.4527,688.0775,249.6688" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="33" x="693.5" y="251.4951">Holds</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="739.3764" y="315.755">2</text><!--MD5=[678cd3f8f2eebfa6c033542a2d0d0e49]
reverse link Game to Opponent--><path codeLine="95" d="M530.5,220.41 C530.5,253.45 530.5,288.87 530.5,319.32 " fill="none" id="Game-backto-Opponent" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="530.5,207.4,526.5,213.4,530.5,219.4,534.5,213.4,530.5,207.4" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="535.5,251.1758,538.4389,242.1307,532.5611,242.1307,535.5,251.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="67" x="544.5" y="251.4951">Instantiates</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="523.1773" y="308.7627">1</text><!--MD5=[4a87da21cd5705cd617207f3b5ce70d6]
reverse link Game to Display--><path codeLine="96" d="M404.46,212.74 C376.21,236.21 346.12,261.21 317.49,285 " fill="none" id="Game-backto-Display" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="414.77,204.16,407.5984,204.9141,405.5362,211.824,412.7078,211.0699,414.77,204.16" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="367.6542,249.3711,376.4895,245.8512,372.7331,241.3302,367.6542,249.3711" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="31" x="380.5" y="251.4951">Links</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="319.3917" y="274.3145">1</text><!--MD5=[b02fab9cac8f610f84b5b23351e0e882]
reverse link WordList to Trie--><path codeLine="98" d="M827.5,484.75 C827.5,528.17 827.5,579.92 827.5,618.71 " fill="none" id="WordList-backto-Trie" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="827.5,471.57,823.5,477.57,827.5,483.57,831.5,477.57,827.5,471.57" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="832.5,557.1758,835.4389,548.1307,829.5611,548.1307,832.5,557.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="36" x="841.5" y="557.4951">Builds</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="820.0734" y="608.0756">1</text><!--MD5=[4a8325bd3d1577e31cb2f039e5502e7d]
reverse link Trie to TrieNode--><path codeLine="99" d="M827.5,749.37 C827.5,784.79 827.5,826.19 827.5,855.33 " fill="none" id="Trie-backto-TrieNode" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="827.5,736.13,823.5,742.13,827.5,748.13,831.5,742.13,827.5,736.13" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="832.5,808.1758,835.4389,799.1307,829.5611,799.1307,832.5,808.1758" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="51" x="841.5" y="808.4951">Contains</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="820.0734" y="757.7561">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="20" x="805.7188" y="844.6616">1--*</text><!--MD5=[c661bbf1d9a11ef53107af5d927572a0]
reverse link Display to WordScore--><path codeLine="101" d="M246.99,524.88 C258.7,547.22 270.66,570.02 281.63,590.93 " fill="none" id="Display-backto-WordScore" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="240.9,513.26,240.1464,520.4316,246.4765,523.8856,247.2301,516.714,240.9,513.26" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="270.8223,556.6038,269.224,547.2285,264.0185,549.9585,270.8223,556.6038" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="56" x="277.5" y="557.4951">Maintains</text><!--MD5=[80b901e73263cc9e1943ac2f60dcb639]
reverse link Opponent to WordScore--><path codeLine="102" d="M464.32,489.7 C440.39,522.14 413.44,558.66 389.76,590.75 " fill="none" id="Opponent-backto-WordScore" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="472.31,478.86,465.527,481.3078,465.1777,488.5104,471.9606,486.0626,472.31,478.86" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#000000" points="424.5314,556.1991,432.2665,550.6657,427.5368,547.1759,424.5314,556.1991" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="59" x="436.5" y="557.4951">Compares</text><!--MD5=[efb83d8e0909c939d3dfe27398e8f66d]
reverse link WordScore to Score--><path codeLine="104" d="M326.5,777.13 C326.5,799.56 326.5,822.5 326.5,841.95 " fill="none" id="WordScore-backto-Score" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="#A80036" points="326.5,764,322.5,770,326.5,776,330.5,770,326.5,764" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a0194e1e8fd7fccff408e9c672e78eb1]
@startuml Adversarial_Wordle

class Game
{
    + Game(allowed_file, answers_file)
    + play()

    - string get_input()
    - update_opponent(string guess)
    - update_board(string guess)
    - bool end_condition()

    - unique_ptr<Display> _internal_display
    - unique_ptr<WordList> _internal_word_list
    - unique_ptr<WordList> _internal_answers
    - unique_ptr<Opponent> _internal_opponent
}

class Display
{
    + Display()
    + add_guess(string guess, WordScore score)
    + update_display() const
    + update_display(string err_msg) const
    + string get_user_input()
    - refresh_display() const
    - format_word(const string &word, const WordScore &score) const
    - format_word(const char &letter) const
    - print_keyboard() const
    - vector<string> _guesses
    - vector<WordScore> _guesses_score
    - map<char, WordScore::Score> _game_state
    - array<char, 26> _keyboard 
}

class WordList
{
    + WordList(string filename)
    + bool check_word(string word) const
    + const set<std::string> &get_word_list() const
    + print_set() const
    - bool add_word(const string &word)
    - set<string> _available_word_list
    - Trie _word_checker 
}

class Opponent
{
    + Opponent(const WordList &master_record)
    + const WordScore prune_words(const string guess)
    + WordScore get_previous_score() const
    + int get_previous_num_score() const
    + string get_random_word() const
    + void print_word_set() const
    - vector<const string*> _word_set
    - WordScore _previous_score
}

class Trie
{
    + Trie()
    + bool insert(const string word)
    + bool search(const string &word) const
    - unique_ptr<TrieNode> create_node()
    - TrieNode _head
}

class TrieNode <<S, LightBlue>>
{
    array<unique_ptr<TrieNode>, ALPHABET_SIZE> children
    bool is_word
}

class WordScore
{
    + enum Score
    + WordScore();
    + set_score(const int position, const Score letter_score);
    + Score get_score(const int position) const;
    + int get_num_score() const;
    + bool operator==(const WordScore &other) const;
    + bool operator<(const WordScore &other) const;
    - array<Score, 5> _word_score;
    - int size;
}

enum Score
{
    Empty
    Incorrect
    Yellow
    Green
}

Game *- - "2" WordList : Holds >
Game *- - "1" Opponent : Instantiates >
Game *- - "1" Display : Links >

WordList *- - "1" Trie : Builds >
Trie "1" *- - "1- -*" TrieNode : Contains >

Display *- - WordScore : Maintains >
Opponent *- - WordScore : Compares >

WordScore *- - Score

@enduml

PlantUML version 1.2022.0(Tue Jan 11 16:16:42 GMT 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: Cp1252
Language: en
Country: GB
--></g></svg>